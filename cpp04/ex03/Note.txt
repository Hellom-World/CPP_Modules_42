
| | Cria Classes concretas Ice e Cure - Classes concretas sao aquelas que nao tem metodos abstratos, ou seja podem ser instanciadas.
| | Cria a classe Abstrada AMaterial - Ou seja, nao pode ser instanciada sem com que uma classe herde e implemente o metodo abstrato.
|X|Implementar na classe AMaterial a interface ICharacter com funcao membros
OBS:. Nesse caso tempos uma classe abstrata que tambem tem uma implemetacao de um interface
| |Criar a Classe Character que implementa a interface ICharacter
| |Criar a Classe MaterialSource que implemeta a interface IMaterialSource
| |Por fim, criar a main de modo a fazer todos os testes necessarios para o bom funcionameto do codigo.
| |E necessario guardar em algum lugar as materias utilizadas

Diario de bordo.
Isso basicamente eh a criacao do desenho do capitao planeta. Temos que criar personagens com superpoderes, no caso personagem que podem utilizar poderes que se esgotam e os poderem sao Gelo e Cura. Gra√ßas a Deus ninguem vai morrer ou perder sangue para conclusao desse projeto. Basicamente vamos atacar ou curar um personagem mais nao vai ser preciso definir as consequencias disso na vitalidade do personagem, ou seja, vai ser um ataque de mentirinha.

A primeira coisa foi definir o que era interface, classe abstrata e classe concreta.
Basicamente temos niveis de abstracao que contem atributos e metodos obrigatorios e isso que define uma interface pois ela basicamente contem metodos setados como =0 que obriga a classe que for herdar/implementar essa interface a definir uma funcionalidade para esses metodos.
Entao primeiro criamos uma classe abstrata "AMateria" e ela eh abstrata pq contem pelomenos 1 metodo como sendo igual a 0. No caso o metodo abstrato eh um metodo de copia que deve permitir que se crie um outro objeto a partir do objeto passado como parametro.
Depois o proximo passo eh criar uma interface ICharacter que vai definir metodos obrigadorios que devem ser implementados quando criarmos um novo Character
E eh ai que entra a Classe concre de Character que deve utilizar da interface ICharacter para implementar seus metodos e salvar em private os ponteiros de 4 classes concretas da classe abstrata AMateria.
Estamos satisfeito?
